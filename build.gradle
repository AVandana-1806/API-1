buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

plugins {
    id "java"
    id 'application'
	id 'net.saliman.cobertura' version '2.3.2'
    id 'org.sonarqube' version '2.0.1'
}

apply plugin: 'com.github.johnrengelman.shadow'
sourceCompatibility = 1.8

project.ext {
    configPath = "$rootProject.projectDir/config/"
    dropwizardVersion = "1.0.0-rc4"
	dropwizardFlywayVersion = "1.0.0-1"
	metricsVersion = "3.1.0"
	dropwizardSwaggerVersion = "1.0.0-1"
	mainclass = "gov.ca.cwds.rest.ApiApplication" 
}

repositories {
    mavenCentral()
    maven {
        url "http://maven2.cwds.tabordasolutions.net/maven2"
    }
}

shadowJar {
    mergeServiceFiles()
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
}
jar {
    manifest {
        attributes 'Main-Class': mainclass
    }
}

dependencies {
	compile group: "io.dropwizard", name: "dropwizard-client", version: dropwizardVersion
	compile group: "io.dropwizard", name: "dropwizard-hibernate", version: dropwizardVersion
	compile group: "io.dropwizard", name: "dropwizard-views", version: dropwizardVersion
	compile group: "io.dropwizard", name: "dropwizard-views-mustache", version: dropwizardVersion
	compile group: 'io.dropwizard', name: 'dropwizard-assets', version: dropwizardVersion
	compile group: "io.dropwizard", name: "dropwizard-testing", version: dropwizardVersion
	compile group: "io.dropwizard.metrics", name: "metrics-core", version: metricsVersion
    compile group: "io.dropwizard.modules", name: "dropwizard-flyway", version: dropwizardFlywayVersion
    compile group: "org.glassfish.jersey.ext", name: "jersey-declarative-linking", version: "2.23.2"
	compile group: "javax.el", name: "javax.el-api", version: "2.2.4"
	compile group: "org.glassfish.web", name: "javax.el", version: "2.2.4"
	compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.8.3'
    compile 'org.elasticsearch:elasticsearch:2.3.5'
	
    compile fileTree(dir: 'lib', include: ['*.jar'])
    
   	//compile project(':swagger-project:swagger-jersey2-jaxrs')
	compile group: 'io.swagger', name: 'swagger-jersey2-jaxrs', version: '1.5.9'
	compile group: 'io.swagger', name: 'swagger-annotations', version: '1.5.9'

    compile group: "org.postgresql", name: "postgresql", version: "9.4.1208.jre7"

    testCompile "junit:junit:4.12"
    testCompile 'org.mockito:mockito-core:2.0.54-beta'
 	testCompile group: 'org.hamcrest', name: 'hamcrest-junit', version: '2.0.0.0'
 	
	testCompile('org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:2.23.2') {
		exclude group: 'javax.servlet', module: 'javax.servlet-api'
		exclude group: 'junit', module: 'junit'
	}
	
	// https://mvnrepository.com/artifact/nl.jqno.equalsverifier/equalsverifier
	testCompile group: 'nl.jqno.equalsverifier', name: 'equalsverifier', version: '2.1.6'
}

tasks.withType(Test) {
    enableAssertions = true
    jvmArgs '-Djava.library.path=.:$rootProject.projectDir/lib/:/var/lib/jenkins/workspace/API/:/usr/local/lib/'
}

test {
    exclude '**/*IT*'
    jvmArgs '-Djava.library.path=.:$rootProject.projectDir/lib/:/var/lib/jenkins/workspace/API/:/usr/local/lib/'
}

task integrationTest(type: Test, dependsOn: testClasses) {
    include '**/*IT*'
    exclude '**/*Test*'
    //exclude '**/*'
}

mainClassName = mainclass

run {
    args "server", configPath + "api.yml"
}

cobertura {
	coverageFormats = ['xml', 'html']
	coverageIgnoreTrivial = true
	coverageIgnores = ['org.slf4j.Logger.*']
	coverageReportDir = new File("$buildDir/reports/cobertura")
}
