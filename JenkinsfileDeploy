import groovy.transform.Field
@Library('jenkins-pipeline-utils') _

@Field
def GITHUB_CREDENTIALS_ID = 'fa29964d-237e-4ecb-96bc-1350dda63f79'
@Field
def deAnsibleGithubUrl = 'git@github.com:ca-cwds/de-ansible.git'

releasePipeline();

def releasePipeline() {
  try {
    deployWithSmoke('integration')
  } catch(Exception exception) {
    currentBuild.result = 'FAILURE'
    throw exception
  }
}

def checkoutStage() {
  stage('Checkout') {
    deleteDir()
    checkout scm
   }
}

def deployWithSmoke(environment) {
  node(environment) {
    checkoutStage()
    rollbackDeployOnFailure('api', environment, GITHUB_CREDENTIALS_ID, ansibleCommand(environment, env.version)) {
      deployToStage(environment, env.version)
      updateManifestStage(environment, env.version)
      buildDockerImageForTestStage()
      miniIntegrationTestStage(environment)
    }
    cleanWs()
  }
}

def ansibleCommand(environment, version) {
  "ansible-playbook -e NEW_RELIC_AGENT=true -e API_APP_VERSION=$version -i inventories/$environment/hosts.yml deploy-ferb-api.yml --vault-password-file ~/.ssh/vault.txt"
}

def deployToStage(environment, version) {
  stage("Deploy to $environment") {
    ws {
      git branch: "master", credentialsId: GITHUB_CREDENTIALS_ID, url: deAnsibleGithubUrl
      sh ansibleCommand(environment, version)
    }
  }
}

def updateManifestStage(environment, version) {
  stage("Update Manifest Version $environment") {
    updateManifest('api', environment, GITHUB_CREDENTIALS_ID, version)
  }
}

def buildDockerImageForTestStage() {
  stage('Build Docker Image for Test') {
    sh "docker build --file docker/DockerfileIntegrationTest -t testferb ."
  }
}

def miniIntegrationTestStage(environment) {
  stage("Smoke Test $environment") {
    withCredentials([
       string(credentialsId: 'c24b6659-fd2c-4d31-8433-835528fce0d7', variable: 'SMOKE_TEST_USER'),
       string(credentialsId: '48619eb9-4a74-4c84-bc25-81557ed9dd7d', variable: 'SMOKE_TEST_PASSWORD'),
       string(credentialsId: 'f75da5fa-b2c8-4ca5-896a-b8a85fa30572', variable: 'SMOKE_VERIFICATION_CODE')
    ]){
    sh "docker run \
      -e SMOKE_TEST_USER=$SMOKE_TEST_USER  \
      -e SMOKE_TEST_PASSWORD=$SMOKE_TEST_PASSWORD \
      -e SMOKE_VERIFICATION_CODE=$SMOKE_VERIFICATION_CODE \
      -e TEST_FILE_PATH=/api/docker/ferb-test/config/testConfig.yml \
      -e AUTH_MODE=integration \
      -e BASE_URL=https://ferbapi.integration.cwds.io/api/v1/ \
      -e PERRY_LOGIN_URL=https://web.integration.cwds.io/perry/login \
      -e AUTH_LOGIN_URL=https://web.integration.cwds.io/perry/authn/login \
      -e TOKEN_URL=https://web.integration.cwds.io/perry/authn/token \
      -e VALIDATE_URL=https://web.integration.cwds.io/perry/authn/validate \
         testferb:latest"
      }
    }
 }
