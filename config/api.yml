applicationName: CWDS API
version: ${APP_VERSION:-local}

shiro:
  iniConfigs: ["file:${SHIRO_CONFIG_PATH:-config/shiro.ini}"]
  
swagger:
  templateName: swagger.mustache
  assetsPath: /static
  resourcePackage: gov.ca.cwds.rest.resources
  title: CWDS API
  description: RESTful API definitions for the CWS New System.
  logo: images/CWDS-API-Logo-Horizontal.png  
  showSwagger: ${SHOW_SWAGGER:-true}
  jsonUrl: ${SWAGGER_JSON_URL:-http://localhost:8080/swagger.json}
  loginUrl: ${LOGIN_URL:-http://localhost:8090/authn/login}
  logoutUrl: ${LOGOUT_URL:-http://localhost:8080/perry/authn/logout}
  callbackUrl: ${SWAGGER_CALLBACK_URL:-http://localhost:8080/swagger}
  tokenUrl: ${SWAGGER_TOKEN_URL:-http://localhost:8080/perry/authn/token}

upgradeDbOnStart: ${UPGRADE_DB_ON_START:-false}

nsDataSourceFactory:
  driverClass: org.postgresql.Driver
  user: ${DB_NS_USER}
  password: ${DB_NS_PASSWORD}
  url: ${DB_NS_JDBC_URL}
  validationQuery: "/* MyService Health Check */ SELECT 1"
  logValidationErrors: true
  initialSize: ${DB_NS_CP_INITIAL_SIZE:-2}
  minSize: ${DB_NS_CP_MIN_SIZE:-2}
  maxSize: ${DB_NS_CP_MAX_SIZE:-8}
  minIdleTime: 1 minute
  properties:
      hibernate.dialect: org.hibernate.dialect.PostgreSQL95Dialect
      hibernate.jdbc.time_zone: America/Los_Angeles
      hibernate.id.new_generator_mappings: false
      hibernate.format_sql: true
      hibernate.use_sql_comments: false
      hibernate.default_schema: ${DB_NS_SCHEMA:-intakens}

cmsDataSourceFactory:
  autoCommitByDefault: false
  driverClass: com.ibm.db2.jcc.DB2Driver
  user: ${DB_CMS_USER}
  password: ${DB_CMS_PASSWORD}
  url: ${DB_CMS_JDBC_URL}
  validationQuery: "/* MyService Health Check */ SELECT 1 FROM SYSIBM.SYSDUMMY1 FOR READ ONLY WITH UR"
  logValidationErrors: true
  initialSize: ${DB_CMS_CP_INITIAL_SIZE:-2}
  minSize: ${DB_CMS_CP_MIN_SIZE:-2}
  maxSize: ${DB_CMS_CP_MAX_SIZE:-8}
  minIdleTime: 1 minute
  properties:
      hibernate.dialect: org.hibernate.dialect.DB2Dialect
      hibernate.jdbc.time_zone: America/Los_Angeles
      hibernate.show_sql: false
      hibernate.format_sql: true
      hibernate.use_sql_comments: false
      hibernate.default_schema: ${DB_CMS_SCHEMA}
      hibernate.connection.autocommit: false
      hibernate.connection.isolation: 1
#     hibernate.c3p0.statementCacheNumDeferredCloseThreads: 1
      hibernate.connection.provider_class: org.hibernate.connection.C3P0ConnectionProvider
      hibernate.c3p0.min_size: 8
      hibernate.c3p0.max_size: 20
      hibernate.c3p0.maxAdministrativeTaskTime: 90
      hibernate.c3p0.timeout: 180
      hibernate.c3p0.max_statements: 0
      hibernate.c3p0.maxStatementsPerConnection: 0
      hibernate.c3p0.idle_test_period: 300
      hibernate.c3p0.acquire_increment: 3
      hibernate.c3p0.preferredTestQuery: SELECT 1 FROM SYSIBM.SYSDUMMY1 FOR READ ONLY WITH UR

rsDataSourceFactory:
  autoCommitByDefault: false
  driverClass: com.ibm.db2.jcc.DB2Driver
  user: ${DB_CWSRS_USER}
  password: ${DB_CWSRS_PASSWORD}
  url: ${DB_CWSRS_JDBC_URL}
  validationQuery: "/* MyService Health Check */ SELECT 1 FROM SYSIBM.SYSDUMMY1 FOR READ ONLY WITH UR"
  logValidationErrors: true
  initialSize: ${DB_CWSRS_CP_INITIAL_SIZE:-2}
  minSize: ${DB_CWSRS_CP_MIN_SIZE:-2}
  maxSize: ${DB_CWSRS_CP_MAX_SIZE:-8}
  minIdleTime: 1 minute
  properties:
      hibernate.dialect: org.hibernate.dialect.DB2Dialect
      hibernate.jdbc.time_zone: America/Los_Angeles
      hibernate.show_sql: false
      hibernate.format_sql: true
      hibernate.use_sql_comments: false
      hibernate.default_schema: ${DB_CWSRS_SCHEMA}
      hibernate.connection.autocommit: false
      hibernate.connection.isolation: 1

elasticsearch:
  # Screenings index
  screeningsIndex:
    # The old "elasticsearch.host" and "elasticsearch.port" will still work but not required when "elasticsearch.nodes" is provided.
    elasticsearch.host: ${ES_HOST_SCREENINGS:-es.dev.cwds.tabordasolutions.net}
    elasticsearch.port: ${ES_PORT_SCREENINGS:-9300}
    elasticsearch.cluster: ${ES_CLUSTER_SCREENINGS:-taborda-dev-es}
    #Comma "," separated List of host:port pairs. Example: host1:port1,host2:port2
    elasticsearch.nodes: ${ES_NODES_SCREENINGS}
    elasticsearch.alias: ${ES_ALIAS_SCREENINGS:-screenings}
    elasticsearch.doctype: ${ES_DOCTYPE:-screening}
    elasticsearch.xpack.user: ${XPACK_USER_SCREENINGS:-}
    elasticsearch.xpack.password: ${XPACK_PASSWORD_SCREENINGS:-}

testConfig:
  path: ${TEST_FILE_PATH:-config/testConfig.yml}
    
smartystreets:
  clientId: ${FERB_SS_ID:-193cc984-be1d-4b18-90c2-2399ebcf67bb}           
  token: ${FERB_SS_TOKEN:-f15BXf61uOidswnnFZAc}     
  maxCandidates: ${FERB_SS_MAX:-10}
  
triggertables:
  laCountySpecificCode: 19
 
webSecurity:
  httpResponseSecurityHeaders:
    # Prevent MIMI sniffing
    X-Content-Type-Options: nosniff
    
    # Prevent click-jacking
    X-Frame-Options: deny
    
    # Prevent cross site scripting
    X-XSS-Protection: 1; mode=block
    
    # Prevent everything other than same origin
    Content-Security-Policy: default-src 'self' 'unsafe-inline';
     
server:
  applicationConnectors:
  - type: http 
    port: ${APP_STD_PORT:-8080}
  adminConnectors:
  - type: http
    port: ${APP_ADMIN_PORT:-8081}
    
  requestLog:
    appenders:
      - type: console

logging:
  level: ${LOGLEVEL:-WARN}
  loggers:
    "org.hibernate.SQL":
      # Use DEBUG to see SQL logged
      level: DEBUG
    "org.hibernate.type.descriptor.sql":
      # Use TRACE to see SQL parameters logged
      level: TRACE
    "gov.ca.cwds.data.ApiHibernateInterceptor":
      # Use DEBUG or TRACE to see entities logged
      level: DEBUG
    "io.dropwizard.server":
      level: INFO
    "io.dropwizard.jersey.DropwizardResourceConfig":
      level: INFO
    "AUDIT":
      level: ALL
  appenders:
    - type: console
      threshold: ALL
      timeZone: UTC
      target: stdout
      logFormat: '[%X{REMOTE_ADDRESS}] [%date{ISO8601}] [%level] [%thread] [%X{UNIQUE_ID}] [%logger] [%X{USER_ID}] [%X{REQUEST_START_TIME}]: [%message]%n'
 